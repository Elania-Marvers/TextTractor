import difflib
import re
from collections import Counter
from text_unidecode import unidecode
import json
import os
from utils import list_files

TRAINING_FOLDER = "training_test"

COMMON_WORDS = {"bonjour", "merci", "document", "texte", "informations", "analyse", "extraction", "test", "ocr", "image", "lecture", "phrase", "probable", "r√©sultat", "fichier"}

# Chargement des textes de r√©f√©rence pour comparaison
expected_texts = {
    "ecriture_manuscrite_0": """Je soussign√© Dr Bertrand Coulon, certifie avoir examin√© le 4/11/2024 √† 21h M. Renneson Baptiste n√© le 10/9/2002, domicili√© 21A rue de Bourgogne 21420 Savigny-les-Beaune.
J'ai constat√© ce qui suit :
- anxi√©t√© g√©n√©ralis√©e
- somatisation du stress
- stress post-traumatique
Il en r√©sulte une ITT de 7 jours.""",
    
    "scan_lettre_0": """Monsieur Baptiste RENNESON-BOUTARD
21A rue de Bourgogne
21420 SAVIGNY LES BEAUNE

Objet : absence injustifi√©e

Monsieur,

Vous √™tes absent de votre lieu de travail depuis le mardi 22 octobre 2024.
Le m√™me jour √† 11h00 nous vous avons envoy√© un courriel constatant votre absence.
Le lendemain, mercredi 30 octobre 2024, nous avons re√ßu un courriel qui nous informait qu‚Äôun m√©decin vous avait prescrit un arr√™t maladie jusqu‚Äôau 3 novembre 2024.
Vous nous avez √©crit en outre avoir post√© ledit arr√™t √† destination de l‚Äôentreprise.
√Ä ce jour nous n‚Äôavons toujours pas re√ßu votre arr√™t maladie.
Nous vous mettons en demeure de nous produire ledit document.
√Ä d√©faut vous vous exposez √† des sanctions disciplinaires pouvant aller jusqu‚Äôau licenciement pour faute.""",
    
    "screen_disc_0": """Elie San 14/08/2024 19:13
Je rappelle les noms de groupes sont random

Kwame42 22/08/2024 17:00
C'est top ! Je vois des mails tomber de tests dans tous les sens üòÜ""",
    
    "screen_disc_1": """Kwame42 Je ne sais pas ce que tu consid√®res dans "ce qu'il a fait" je pourrais te r√©pondre √©galement : "il t...

Elie San 30/08/2024 09:35
Et bah l√† est tout le probl√®me vous √™tes persuad√© qu‚Äôil a tent√© de me sauver la vie et pensez que je suis d√©s√©quilibr√© voil√† le vrai probl√®me.

Kwame42 30/08/2024 17:11
Non Elie. Ce n‚Äôest pas ce que je t‚Äôai √©crit. Ce n‚Äôest pas parce que je te dis que Abdel t‚Äôa sauv√© (avec un t√©moin autour) que je pense que tu es un d√©s√©quilibr√©.
L‚Äôun et l‚Äôautre ne sont pas li√©s.
C‚Äôest aussi simple que √ßa.
Abdel c‚Äôest abdel, toi c‚Äôest toi.
Abdel, et j‚Äô√©tais et tu me l‚Äôas dit, t‚Äôas d√©tach√©."""
}

def compute_similarity(text1, text2):
    """Calcule la similarit√© entre deux textes."""
    return difflib.SequenceMatcher(None, text1, text2).ratio()

def evaluate_ocr_result(file_name, extracted_text):
    """√âvalue la qualit√© de l'OCR en comparant le texte extrait au texte attendu."""
    base_name = os.path.splitext(os.path.basename(file_name))[0]
    if base_name in expected_texts:
        reference_text = expected_texts[base_name]
        score = compute_similarity(reference_text, extracted_text)
        return score
    return None  # Aucun texte de r√©f√©rence disponible



def clean_text(text):
    """Nettoie le texte OCR (espaces, accents, caract√®res sp√©ciaux)"""
    text = text.lower().strip()
    text = re.sub(r'\s+', ' ', text)
    text = unidecode(text)
    text = re.sub(r'[^a-z0-9\s]', '', text)
    return text

def refine_ocr_results(texts):
    """Analyse les r√©sultats OCR et retourne la meilleure pr√©diction"""
    cleaned_texts = [clean_text(txt) for txt in texts]
    counter = Counter(cleaned_texts)
    most_common_text, _ = counter.most_common(1)[0]

    # üîç Comparaison avec les anciens r√©sultats
    past_results = list_files(TRAINING_FOLDER, extensions=[".json"])
    
    for past_file in past_results:
        with open(past_file, "r", encoding="utf-8") as f:
            data = json.load(f)
        old_text = clean_text(data["optimized_text"])
        
        if difflib.SequenceMatcher(None, most_common_text, old_text).ratio() > 0.85:
            print(f"‚ö†Ô∏è Am√©lioration d√©tect√©e : Ancien texte plus fiable trouv√©")
            return data["optimized_text"]  # Utilisation de l'ancien meilleur r√©sultat

    return most_common_text
